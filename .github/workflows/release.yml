name: Release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            build-task: build-windows
          - os: ubuntu-latest
            build-task: build-linux
          - os: macos-latest
            build-task: build-mac

    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
    - name: Get tag and version
      run: |
        echo "RELEASE_TAG=${GITHUB_REF:10}" >> $GITHUB_ENV
        echo "RELEASE_VERSION=${GITHUB_REF:11}" >> $GITHUB_ENV

    - name: Set environment vars for Windows
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        $env:RELEASE_TAG=$($env:GITHUB_REF.Substring(10))
        $env:RELEASE_VERSION=$($env:GITHUB_REF.Substring(11))

        echo "RELEASE_TAG=$($env:RELEASE_TAG)" >> $env:GITHUB_ENV
        echo "RELEASE_VERSION=$($env:RELEASE_VERSION)" >> $env:GITHUB_ENV
        echo "ARTIFACT_FILE=./electron/dist/Yarn Editor Setup $($env:RELEASE_VERSION).exe" >> $env:GITHUB_ENV
        echo "ARTIFACT_NAME=Yarn.Editor.Setup.$($env:RELEASE_VERSION).exe" >> $env:GITHUB_ENV

    - name: Set environment vars for Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        echo "ARTIFACT_FILE=./electron/dist/yarn-editor_${{ env.RELEASE_VERSION }}_amd64.snap" >> $GITHUB_ENV
        echo "ARTIFACT_NAME=Yarn.Editor.Setup.${{ env.RELEASE_VERSION }}.snap" >> $GITHUB_ENV

    - name: Set environment vars for Mac
      if: matrix.os == 'macos-latest'
      run: |
        echo "ARTIFACT_FILE=./electron/dist/Yarn Editor-${{ env.RELEASE_VERSION }}.dmg" >> $GITHUB_ENV
        echo "ARTIFACT_NAME=Yarn.Editor.Setup.${{ env.RELEASE_VERSION }}.dmg" >> $GITHUB_ENV

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Use Node.js 16.x
      uses: actions/setup-node@v1
      with:
        node-version: 16.x

    - run: npm ci

    - name: npm install and build
      run: cd electron && yarn install && yarn run ${{ matrix.build-task }}
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ env.ARTIFACT_FILE }}
        asset_name: ${{ env.ARTIFACT_NAME }}
        tag: ${{ env.RELEASE_TAG }}

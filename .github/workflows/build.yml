name: Build

on:
  push:
    branches: [ master ]

jobs:
  # TODO: write a job to update version and publish artifact to share the version between jobs

  build-windows:
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - run: npm ci

    - name: npm install and build
      run: cd electron && yarn install && yarn run build-windows
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Read package.json
      uses: tyankatsu0105/read-package-version-actions@v1
      id: package-version

    - name: Archive production artifacts
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v1
      with:
        name: Windows - Yarn Editor Setup ${{ steps.package-version.outputs.version }}.exe
        path: ./electron/dist/Yarn Editor Setup ${{ steps.package-version.outputs.version }}.exe
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

  build-linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - run: npm ci

    - name: npm install and build
      run: cd electron && yarn install && yarn run build-linux
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Read package.json
      uses: tyankatsu0105/read-package-version-actions@v1
      id: package-version

    - name: Archive production artifacts
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v1
      with:
        name: Linux - yarn-editor_${{ steps.package-version.outputs.version }}_amd64.snap
        path: ./electron/dist/yarn-editor_${{ steps.package-version.outputs.version }}_amd64.snap
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

  build-mac:
    runs-on: macos-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - run: npm ci

    - name: npm install and build
      run: cd electron && yarn install && yarn run build-mac
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Read package.json
      uses: tyankatsu0105/read-package-version-actions@v1
      id: package-version

    - name: Archive production artifacts
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v1
      with:
        name: Mac - Yarn Editor-${{ steps.package-version.outputs.version }}.dmg
        path: ./electron/dist/Yarn Editor-${{ steps.package-version.outputs.version }}.dmg
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
